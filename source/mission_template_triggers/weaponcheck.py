from source.header_operations import *
from source.header_common import *
from source.header_triggers import ti_on_order_issued, ti_on_item_wielded, \
    gk_toggle_weapon_mode
from source.header_items import itp_type_one_handed_wpn, itp_type_arrows, \
    ek_item_0, ek_head
from source.header_mission_templates import mordr_use_any_weapon, \
    mordr_use_blunt_weapons, mordr_stand_ground
from source.header_items import *
from source.module_constants import *
 


common_weapon_check = [ #3 triggers; has to go before dedal_leg_check
    ##spear equipped?
  # (ti_on_agent_spawn, 0, 0, [],
  #   [
  #     (store_trigger_param_1, ":agent_no"),
  #     (agent_is_human, ":agent_no"),
  #     (agent_is_alive, ":agent_no"),
  #     (agent_is_non_player, ":agent_no"),
  #     (agent_get_item_slot, ":cur_armor", ":agent_no", ek_body),
  #     (agent_get_troop_id, ":troop", ":agent_no"),
  #     (neg|troop_is_hero,":troop"),
  #     (troop_get_inventory_capacity, ":end_cond", ":troop"),
  #     (assign, ":result", -1),
  #     (assign, ":slot_no", 0),
  #     (try_for_range, ":i_slot", 0, ":end_cond"),
  #       (troop_get_inventory_slot, ":item_id", ":troop", ":i_slot"),
  #       (gt,":item_id",0),
  #       (item_get_type, ":item_type", ":item_id"),
  #       (eq, ":item_type", itp_type_body_armor),
  #       (troop_get_inventory_slot_modifier, ":item_imod", ":troop", ":i_slot"),
  #       (troop_set_slot, "trp_temp_array_b", ":slot_no", ":item_id"),
  #       (troop_set_slot, "trp_temp_array_a", ":slot_no", ":item_imod"),
  #       (val_add, ":slot_no", 1),
  #     (try_end),
  #     (try_for_range, ":unused", 0, 2),
  #       (call_script, "script_shuffle_troop_slots",  "trp_temp_array_b",0,":slot_no"),
  #     (try_end),
  #     (gt, ":slot_no", 0),
  #     (store_mul, ":slot10", ":slot_no",10),
  #     (try_for_range, ":unused", 0, 6),
  #       (store_random_in_range, ":result", 0, ":slot10"),
  #     (try_end),
  #     (val_div, ":result", 10),
  #     (try_begin),
  #       (gt, ":slot_no", 6),
  #       (store_div, ":half", ":slot_no", 2),
  #       (eq, ":result", ":half"),
  #       #     (display_log_message, "@Half!"),
  #       (store_random_in_range, ":rand", -2,3),
  #       (val_add, ":result", ":rand"),
  #     (try_end),
  #     (neq, ":result", -1),
  #     (store_random_in_range, ":imod", 0, ":slot_no"),
  #     (troop_get_slot, ":cur_slot", "trp_temp_array_b", ":result"),
  #     (troop_get_slot, ":cur_imod", "trp_temp_array_a", ":imod"),
  #     (neq, ":cur_slot", ":cur_armor"),
  #     #   (str_store_item_name, s24, ":cur_armor"),
  #     #   (str_store_item_name, s23, ":cur_slot"),
  #     #   (assign, reg24, ":cur_armor"),
  #     #   (assign, reg23, ":cur_slot"),
  #     #   (assign, reg25, ":agent_no"),
  #     #   (assign, reg26, ":result"),
  #     (try_begin),
  #       (gt, ":cur_armor", -1),
  #       (agent_unequip_item, ":agent_no",":cur_armor"),
  #     (try_end),
  #     (agent_equip_item, ":agent_no",":cur_slot",ek_body, ":cur_imod"),
  #     #   (display_log_message, "@{!}{reg25} - Removed {s24}({reg24}), equipped {s23} ({reg23}), slot is {reg26}"),
  # ]),
##seems to unequip spears for clubs in practice
  # (1,0,2,[],
  #   [(try_for_agents, ":agent_no"),
  #       (agent_is_non_player, ":agent_no"),
  #       (agent_is_human, ":agent_no"),
  #       (agent_is_alive, ":agent_no"),
  #       (agent_get_troop_id, ":troop", ":agent_no"),
  #       (troop_is_guarantee_horse, ":troop"),
  #       (agent_get_horse, ":horse", ":agent_no"),
  #       (le, ":horse", 0),
  #       (agent_get_wielded_item, ":wielded_item", ":agent_no", 0),
  #       (gt, ":wielded_item", 0),
  #       (is_between, ":wielded_item", "itm_spear_sharppitchfork", "itm_spearbanner4"),
  #       (agent_unequip_item, ":agent_no", ":wielded_item"),
  #       (call_script, "script_equip_best_melee_weapon", ":agent_no", 0, 0, 1),
  #       (try_begin),
  #         (eq, "$cheat_mode", 1),
  #         (str_store_troop_name, s33, ":troop"),
  #         (display_message, "@{s33} changes weapons"),
  #       (try_end),
  #     (try_end),
  # ]),
  
  (2, 0, 10,[],
    [(store_trigger_param_1, ":agent_no"),
    (try_for_agents, ":agent_no"),
        (agent_is_non_player, ":agent_no"),
        (agent_is_human, ":agent_no"),
        (agent_is_alive, ":agent_no"),
        (agent_get_troop_id, ":troop", ":agent_no"),
        (agent_get_wielded_item, ":wielded_item", ":agent_no", 0),
        (gt, ":wielded_item", 0),
        (item_get_type, ":weapon_type", ":wielded_item"),
        (troop_is_guarantee_ranged, ":troop"),
        (try_begin),
          (eq,":weapon_type", itp_type_pistol),#slings
          (agent_get_position, pos0, ":agent_no"),
          #       (agent_get_team, ":team", ":agent_no"),
          (agent_ai_get_num_cached_enemies, ":num_nearby_agents", ":agent_no"),
          (try_for_range, reg0, 0, ":num_nearby_agents"),
            (agent_ai_get_cached_enemy, ":enemy_agent", ":agent_no", reg0),
            (agent_is_alive, ":enemy_agent"),
            (agent_is_human, ":enemy_agent"),
            (agent_get_position, pos1, ":enemy_agent"),
            #       (agent_get_slot, ":closest_enemy", ":agent_no", slot_agent_nearest_enemy_agent),
            
            #               (try_for_agents, ":enemy_agent"),
            #                   (agent_is_alive, ":enemy_agent"),
            #                    (agent_is_human, ":enemy_agent"),
            #         (agent_get_team, ":enemy_team", ":enemy_agent"),
            #         (teams_are_enemies, ":team", ":enemy_team"),
            #                   (agent_get_position, pos1, ":enemy_agent"),
            (get_distance_between_positions, ":distance", pos0, pos1),
            (lt, ":distance", 2000),
            (assign, ":end", ek_head),
            (try_for_range, ":slot", ek_item_0, ":end"),
              (agent_get_item_slot, ":cur_weapon", ":agent_no", ":slot"),
              (gt, ":cur_weapon", -1),
              (item_get_type, ":weapon_type", ":cur_weapon"),
              (eq, ":weapon_type", itp_type_thrown),
              (agent_unequip_item, ":agent_no", ":wielded_item"),
              (agent_set_wielded_item, ":agent_no", ":cur_weapon"),
              (assign, ":end", ek_item_0),
            (try_end),
          (try_end),
        (try_end),
      (try_end),
  ]),
]
